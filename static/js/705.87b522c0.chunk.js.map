{"version":3,"file":"static/js/705.87b522c0.chunk.js","mappings":"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","sources":["components/MoviesList.jsx","Home.jsx","pages/MoviesSearch.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nexport function MoviesList({ movies }) {\n  return (\n    <div>\n      {movies.map(elem => (\n        <li key={elem.id}>\n          <Link to={`${elem.id}`}>{elem.title ? elem.title : elem.name}</Link>\n        </li>\n      ))}\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { MoviesList } from 'components/MoviesList';\nimport { useEffect, useState } from 'react';\n\nexport const MYAPI = '48d7bf93e386bf362111f4874b62be4e';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const data = await axios.get(\n          `https://api.themoviedb.org/3/trending/all/day?api_key=${MYAPI}`\n        );\n        setMovies(data.data.results);\n      } catch {\n        console.log('ERROR');\n      }\n    };\n    getData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport { MYAPI } from '../Home';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\n\nexport default function MoviesSearch() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const addrQuery = searchParams.get('query');\n      try {\n        const response = await axios.get(\n          `https://api.themoviedb.org/3/search/movie?query=${addrQuery}&api_key=${MYAPI}`\n        );\n        setMovies(response.data);\n      } catch (error) {\n        console.log('Error fetching data:', error);\n        setMovies(null);\n      }\n    };\n\n    if (searchParams.get('query')) {\n      fetchData();\n    }\n  }, [query, searchParams]);\n\n  const submitHandler = event => {\n    event.preventDefault();\n    setSearchParams({ query: event.currentTarget[0].value });\n    setQuery(event.currentTarget[0].value);\n  };\n  return (\n    <div>\n      <h2>Search a movie</h2>\n      <form onSubmit={submitHandler} action=\"\">\n        <input type=\"text\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && (\n        <div>\n          <ul>\n            {movies.results.map(movie => {\n              return (\n                <li key={movie.id}>\n                  <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                    {movie.title}\n                  </Link>\n                </li>\n              );\n            })}\n          </ul>\n          {movies.results.length === 0 && <p>Movies has not found</p>}\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["MoviesList","_ref","movies","_jsx","children","map","elem","Link","to","concat","id","title","name","MYAPI","Home","_useState","useState","_useState2","_slicedToArray","setMovies","useEffect","getData","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","axios","sent","results","t0","console","log","stop","apply","arguments","_jsxs","MoviesSearch","query","setQuery","_useState3","_useState4","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","location","useLocation","fetchData","addrQuery","response","get","onSubmit","event","preventDefault","currentTarget","value","action","type","movie","state","from","length"],"sourceRoot":""}